---
import type { HTMLAttributes } from "astro/types";
import { type VariantProps, tv } from "tailwind-variants";

interface Props
	extends HTMLAttributes<"button">,
		Omit<HTMLAttributes<"a">, "type">,
		VariantProps<typeof button> {}

const { variant, size, class: className, ...rest } = Astro.props;

const button = tv({
	base: [
		"inline-flex items-center gap-1.5 rounded-md font-medium whitespace-nowrap",
	],
	variants: {
		variant: {
			default: "bg-base-muted text-content-muted hover:bg-base-subtle",
			primary: "bg-accent text-accent-low hover:bg-accent/90 focus-visible:outline-accent",
			outline: "border-ui-primary hover:bg-base-muted hover:text-content-primary focus-visible:outline-ui-primary border",
			ghost: "text-content-muted bg-transperent hover:bg-base-muted/70 hover:text-content-primary focus-visible:outline-ui-primary bg-transparent",
		},
		size: {
			sm: "px-3 py-2 text-sm",
			md: "px-4 py-2 text-base",
			lg: "px-8 py-2 text-lg",
			icon: "size-6",
		},
	},
	defaultVariants: { variant: "default", size: "md" },
});

const Tag = Astro.props.href ? "a" : "button";
---

<Tag class={button({ variant, size, class: className })} {...rest}>
	<slot />
</Tag>