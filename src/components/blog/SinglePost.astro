---
import { render } from 'astro:content';
import PageLayout from '@/layouts/PageLayout.astro';
import { getFormattedDate } from '@/utils/commonFunctions';
import type { CollectionEntry } from 'astro:content';
import Container from '@/components/layout/Container.astro';
import RenderMarkdown from './RenderMarkdown.astro';
import Badge from '@/components//ui/Badge.astro';
import CustomImage from '@/components/ui/CustomImage.astro';
import BackButton from '@/components/widgets/BackButton.astro';

interface Props {
  post: CollectionEntry<'blog'>
  isSearchable?: boolean
}

const { post, isSearchable = false } = Astro.props

const { data: frontmatter } = post
const { Content, headings, remarkPluginFrontmatter } = await render(post);

const title = frontmatter.title
const description = frontmatter.description
const coverImage = frontmatter.coverImage
const coverImageAlt = frontmatter.coverImageAlt || title
const pubDate = frontmatter.publishedDate.toISOString()
const isDraft = frontmatter.isDraft
---
<PageLayout>
  <Container outerClass="max-w-5xl">
    <!-- Back button -->
    <BackButton
      title="All Articles"
      href="/articles"
    />
    <section class="post-head pb-6 mx-auto max-w-3xl">
      <h1 class="font-bold">{title}</h1>
      <div class="post-meta">
        <div class="post-date text-muted-txt py-3">
          {isDraft ? (
            <Badge
                size="sm"
                style="outline"
                class="text-paper font-semibold bg-accent-red"
              >
               This is a draft post
              </Badge>
          ) : (
            <>
              <time class="font-code" dateTime={pubDate}>{getFormattedDate(pubDate)}</time>
              {frontmatter.readingTime && (
                <span class="reading-time">{frontmatter.readingTime}</span>
              )}
            </>
          )}
        </div>
        {isSearchable && (
          <div class="post-search">
            <input type="text" placeholder="Search..." />
          </div>
        )}
        <div class="post-tags flex gap-2">
          {frontmatter.tags.map((tag) => (
            <a href={`/tags/${tag}`} class="tag" key={tag}>

              <Badge
                size="sm"
                style="primary"
                class="font-semibold text-muted-txt"
                accent='orange'
              >
                #{tag}
              </Badge>
            </a>
          ))}
        </div>
      </div>
    </section>
    <section class="post-cover mb-6 group">
      {coverImage && (
        <CustomImage
          src={coverImage}
          alt={coverImageAlt}
          class="shadow-xl"
        />
      )}
    <section class="markdown-content mb-6 post-content max-w-3xl mx-auto">
      <Content components="CustomeImage"/>
    </section>
  </Container>
</PageLayout>